MODULE main
VAR
	--nodes and pseudo-nodes of ad
	in_n0_initial : boolean;
	in_n19_final : boolean;
	in_n20_final : boolean;
	in_n21_final : boolean;
	in_n1 : boolean;
	in_n2 : boolean;
	in_n3 : boolean;
	in_n4 : boolean;
	in_n5 : boolean;
	in_n6 : boolean;
	in_n7 : boolean;
	in_n8 : boolean;
	in_n9 : boolean;
	in_n10 : boolean;
	in_n11 : boolean;
	in_n12 : boolean;
	in_n13 : boolean;
	in_n14 : boolean;
	in_n15 : boolean;
	in_n16 : boolean;
	in_n17 : boolean;
	in_n18 : boolean;
	--visitable nodes
	acnode : {n0_initial, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19_final, n20_final, n21_final, nop};
	
	--the visible action of step
	ac : {registrasi_donor,	verifikasi_kesehatan, cek_data_serologi, cek_darah, identifikasi_donor_dan_set_label, pengambilan_darah_donor_dan_sample, cek_kondisi_pendonor, cek_volume_kantong, cek_waktu_pengambilan, waktu_valid, produk_baik, non_FFP_produk, hanya_WB, pengecekan_pencatatan_dan_distribusi_darah_karantina, pengolahan_darah_lanjut, musnahkan_darah, donor_gagal, distribusi_darah, nop};
	
	--input variables
	pendonor : {baru, terdaftar};
	data_serologi : {true, false};
	cek_kesehatan : {true, false};
	darah : {true, false};
	kondisi : {true, false};
	volume : {true, false};
	waktu : {krngDr20, lbhDr20, krngDr12, hng15, lbhDr15};
	pengolahan : {true, false};
	
	--control variables
INIT
	--init all nodes
	in_n0_initial = TRUE &
	in_n19_final = FALSE &
	in_n20_final = FALSE &
	in_n21_final = FALSE &
	in_n1 = FALSE &
	in_n2 = FALSE &
	in_n3 = FALSE &
	in_n4 = FALSE &
	in_n5 = FALSE &
	in_n6 = FALSE &
	in_n7 = FALSE &
	in_n8 = FALSE &
	in_n9 = FALSE &
	in_n10 = FALSE &
	in_n11 = FALSE &
	in_n12 = FALSE &
	in_n13 = FALSE &
	in_n14 = FALSE &
	in_n15 = FALSE &
	in_n16 = FALSE &
	in_n17 = FALSE &
	in_n18 = FALSE &
		
	--init control variables as assign in first nodes
	--set initial visible action node and visible action
	acnode = n0_initial &
	ac = nop;
	
	--shortcut to what happens when an edge is taken
DEFINE
	en0_initialn1_enabled := in_n0_initial;
	en0_initialn1_taken := en0_initialn1_enabled &
		--not in previous nodes anymore
		!next(in_n0_initial) &
		--arrive in target node
		next(in_n1) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n1);

DEFINE
	en1n2_enabled := in_n1 & (pendonor = baru);
	en1n2_taken := en1n2_enabled &
		--not in previous nodes anymore
		!next(in_n1) &
		--arrive in target node
		next(in_n2) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n2);

DEFINE
	en1n3_enabled := in_n1 & (pendonor = terdaftar);
	en1n3_taken := en1n3_enabled &
		--not in previous nodes anymore
		!next(in_n1) &
		--arrive in target node
		next(in_n3) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n3);
		
DEFINE
	en2n4_enabled := in_n2 & (cek_kesehatan = true);
	en2n4_taken := en2n4_enabled &
		--not in previous nodes anymore
		!next(in_n2) &
		--arrive in target node
		next(in_n4) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n4);

DEFINE
	en2n5_enabled := in_n2 & (cek_kesehatan = false);
	en2n5_taken := en2n5_enabled &
		--not in previous nodes anymore
		!next(in_n2) &
		--arrive in target node
		next(in_n5) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n5);
		
DEFINE
	en3n2_enabled := in_n3 & (data_serologi = true);
	en3n2_taken := en3n2_enabled &
		--not in previous nodes anymore
		!next(in_n3) &
		--arrive in target node
		next(in_n2) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n2);

DEFINE
	en3n5_enabled := in_n3 & (data_serologi = false);
	en3n5_taken := en3n5_enabled &
		--not in previous nodes anymore
		!next(in_n3) &
		--arrive in target node
		next(in_n5) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n5);

DEFINE
	en4n6_enabled := in_n4 & (darah = true);
	en4n6_taken := en4n6_enabled &
		--not in previous nodes anymore
		!next(in_n4) &
		--arrive in target node
		next(in_n6) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n6);

DEFINE
	en4n5_enabled := in_n4 & (darah = false);
	en4n5_taken := en4n5_enabled &
		--not in previous nodes anymore
		!next(in_n4) &
		--arrive in target node
		next(in_n5) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n5);
		
DEFINE
	en5n19_final_enabled := in_n5;
	en5n19_final_taken := en5n19_final_enabled &
		--not in previous nodes anymore
		!next(in_n5) &
		--arrive in target node
		next(in_n19_final) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n19_final);		
		
DEFINE
	en6n7_enabled := in_n6;
	en6n7_taken := en6n7_enabled &
		--not in previous nodes anymore
		!next(in_n6) &
		--arrive in target node
		next(in_n7) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n7);

DEFINE
	en7n8_enabled := in_n7;
	en7n8_taken := en7n8_enabled &
		--not in previous nodes anymore
		!next(in_n7) &
		--arrive in target node
		next(in_n8) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n8);

DEFINE
	en8n9_enabled := in_n8 & (kondisi = true);
	en8n9_taken := en8n9_enabled &
		--not in previous nodes anymore
		!next(in_n8) &
		--arrive in target node
		next(in_n9) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n9);

DEFINE
	en8n18_enabled := in_n8 & (kondisi = false);
	en8n18_taken := en8n18_enabled &
		--not in previous nodes anymore
		!next(in_n8) &
		--arrive in target node
		next(in_n18) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n18);
		
DEFINE
	en9n10_enabled := in_n9 & (volume = true);
	en9n10_taken := en9n10_enabled &
		--not in previous nodes anymore
		!next(in_n9) &
		--arrive in target node
		next(in_n10) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n10);

DEFINE
	en9n18_enabled := in_n9 & (volume = false);
	en9n18_taken := en9n18_enabled &
		--not in previous nodes anymore
		!next(in_n9) &
		--arrive in target node
		next(in_n18) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n18);

		
DEFINE
	en10n11_enabled := in_n11 & (waktu = krngDr20);
	en10n11_taken := en10n11_enabled &
		--not in previous nodes anymore
		!next(in_n10) &
		--arrive in target node
		next(in_n11) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n11);

DEFINE
	en10n18_enabled := in_n10 & (waktu = lbhDr20);
	en10n18_taken := en10n18_enabled &
		--not in previous nodes anymore
		!next(in_n10) &
		--arrive in target node
		next(in_n18) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n18);
		
DEFINE
	en11n12_enabled := in_n11 & (waktu = krngDr12);
	en11n12_taken := en11n12_enabled &
		--not in previous nodes anymore
		!next(in_n11) &
		--arrive in target node
		next(in_n12) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n12);
		
DEFINE
	en11n13_enabled := in_n11 & (waktu = hng15);
	en11n13_taken := en11n13_enabled &
		--not in previous nodes anymore
		!next(in_n11) &
		--arrive in target node
		next(in_n13) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n13);
		
DEFINE
	en11n14_enabled := in_n11 & (waktu = lbhDr15);
	en11n14_taken := en11n14_enabled &
		--not in previous nodes anymore
		!next(in_n11) &
		--arrive in target node
		next(in_n14) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n14);

DEFINE
	en12n15_enabled := in_n12;
	en12n15_taken := en12n15_enabled &
		--not in previous nodes anymore
		!next(in_n12) &
		--arrive in target node
		next(in_n15) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n15);
		
DEFINE
	en13n15_enabled := in_n13;
	en13n15_taken := en13n15_enabled &
		--not in previous nodes anymore
		!next(in_n13) &
		--arrive in target node
		next(in_n15) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n15);
		
DEFINE
	en14n15_enabled := in_n14;
	en14n15_taken := en13n15_enabled &
		--not in previous nodes anymore
		!next(in_n14) &
		--arrive in target node
		next(in_n15) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n15);
		
DEFINE
	en15n16_enabled := in_n15;
	en15n16_taken := en15n16_enabled &
		--not in previous nodes anymore
		!next(in_n15) &
		--arrive in target node
		next(in_n16) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n16);
		
DEFINE
	en16n17_enabled := in_n16 & (pengolahan = true);
	en16n17_taken := en16n17_enabled &
		--not in previous nodes anymore
		!next(in_n16) &
		--arrive in target node
		next(in_n17) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n17);

DEFINE
	en16n18_enabled := in_n18 & (pengolahan = false);
	en16n18_taken := en16n18_enabled &
		--not in previous nodes anymore
		!next(in_n16) &
		--arrive in target node
		next(in_n18) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n18);

		
DEFINE
	en17n20_final_enabled := in_n17;
	en17n20_final_taken := en17n20_final_enabled &
		--not in previous nodes anymore
		!next(in_n17) &
		--arrive in target node
		next(in_n20_final) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n20_final);

DEFINE
	en18n21_final_enabled := in_n18;
	en18n21_final_taken := en18n21_final_enabled &
		--not in previous nodes anymore
		!next(in_n18) &
		--arrive in target node
		next(in_n21_final) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n21_final);
		
TRANS
	( (in_n0_initial = next(in_n0_initial)) | 
	en0_initialn1_taken ) & 
	( (in_n1 = next(in_n1)) | 
	en0_initialn1_taken | 
	en1n2_taken |
	en1n3_taken ) & 
	( (in_n2 =  next(in_n2)) |
	en1n2_taken |
	en3n2_taken |
	en2n4_taken |
	en2n5_taken ) &
	( (in_n3 = next (in_n3)) |
	en1n3_taken |
	en3n2_taken |
	en3n5_taken ) &
	( (in_n4 = next(in_n4)) |
	en2n4_taken |
	en4n5_taken |
	en4n6_taken ) &
	( (in_n5 = next(in_n5)) |
	en2n5_taken |
	en3n5_taken |
	en4n5_taken |
	en5n19_final_taken ) &
	( (in_n6 = next(in_n6)) |
	en4n6_taken |
	en6n7_taken ) &
	( (in_n7 =  next(in_n7)) |
	en6n7_taken |
	en7n8_taken ) &
	( (in_n8 = next(in_n8)) |
	en7n8_taken |
	en8n9_taken |
	en8n18_taken ) &
	( (in_n9 = next(in_n9)) |
	en8n9_taken |
	en9n10_taken |
	en9n18_taken ) &
	( (in_n10 = next(in_n10)) |
	en9n10_taken |
	en10n11_taken |
	en10n18_taken ) &
	( (in_n11 = next(in_n11)) |
	en10n11_taken |
	en11n12_taken |
	en11n13_taken |
	en11n14_taken ) &
	( (in_n12 = next(in_n12)) |
	en11n12_taken |
	en12n15_taken ) &
	( (in_n13 = next(in_n13)) |
	en11n13_taken |
	en13n15_taken ) &
	( (in_n14 = next(in_n14)) |
	en11n14_taken |
	en14n15_taken ) &
	( (in_n15 = next(in_n15)) |
	en12n15_taken |
	en13n15_taken |
	en14n15_taken |
	en15n16_taken ) &
	( (in_n16 = next(in_n16)) |
	en15n16_taken |
	en16n17_taken |
	en16n18_taken ) &
	( (in_n17 = next(in_n17)) |
	en16n17_taken |
	en17n20_final_taken ) &
	( (in_n18 = next(in_n18)) |
	en8n18_taken |
	en9n18_taken |
	en10n18_taken |
	en16n18_taken |
	en18n21_final_taken ) &
	( (in_n19_final = next(in_n19_final)) |
	en5n19_final_taken ) &
	( (in_n20_final = next(in_n20_final)) |
	en17n20_final_taken ) &
	( (in_n21_final = next(in_n21_final)) |
	en18n21_final_taken );
	
			
TRANS
	( (next(acnode =nop) <-> in_n19_final) ) &
		(in_n19_final | (
			(en0_initialn1_taken) |
			(en1n2_taken) |
			(en1n3_taken) |
			(en2n4_taken) |
			(en3n2_taken) |
			(en3n5_taken) |
			(en4n5_taken) |
			(en5n19_final_taken) ) );
			
TRANS
	( (next(acnode =nop) <-> in_n20_final) ) &
		(in_n20_final | (
			(en0_initialn1_taken) |
			(en1n2_taken) |
			(en1n3_taken) |
			(en3n2_taken) |
			(en2n4_taken) |
			(en4n6_taken) |
			(en6n7_taken) |
			(en7n8_taken) |
			(en8n9_taken) |
			(en9n10_taken) |
			(en10n11_taken) |
			(en11n12_taken) |
			(en11n13_taken) |
			(en11n14_taken) |
			(en12n15_taken) |
			(en13n15_taken) |
			(en14n15_taken) |
			(en15n16_taken) |
			(en16n17_taken) |
			(en17n20_final_taken) ) );
			
TRANS
	( (next(acnode =nop) <-> in_n21_final) ) &
		(in_n21_final | (
			(en0_initialn1_taken) |
			(en1n2_taken) |
			(en1n3_taken) |
			(en3n2_taken) |
			(en2n4_taken) |
			(en4n6_taken) |
			(en6n7_taken) |
			(en7n8_taken) |
			(en8n9_taken) |
			(en8n18_taken) |
			(en9n10_taken) |
			(en9n18_taken) |
			(en10n11_taken) |
			(en10n18_taken) |
			(en11n12_taken) |
			(en11n13_taken) |
			(en11n14_taken) |
			(en12n15_taken) |
			(en13n15_taken) |
			(en14n15_taken) |
			(en15n16_taken) |
			(en16n17_taken) |
			(en16n18_taken) |
			(en18n21_final_taken) ) );
			
TRANS
	--input variables do not change
	pendonor = next(pendonor);
	
TRANS
	--input variables do not change
	data_serologi = next(data_serologi);

TRANS
	--input variables do not change
	cek_kesehatan = next(cek_kesehatan);
	
	
TRANS
	--input variables do not change
	darah = next(darah);

TRANS
	--input variables do not change
	volume = next(volume);

TRANS
	--input variables do not change
	waktu = next(waktu);
	
TRANS
	--input variables do not change
	pengolahan = next(pengolahan);
	
TRANS
	(next(acnode) = n0_initial -> next(ac) = nop) &
	(next(acnode) = n1 -> next(ac) = registrasi_donor) &
	(next(acnode) = n2 -> next(ac) = verifikasi_kesehatan) &
	(next(acnode) = n3 -> next(ac) = cek_data_serologi) &
	(next(acnode) = n4 -> next(ac) = cek_darah) &
	(next(acnode) = n5 -> next(ac) = donor_gagal) &
	(next(acnode) = n6 -> next(ac) = identifikasi_donor_dan_set_label) &
	(next(acnode) = n7 -> next(ac) = pengambilan_darah_donor_dan_sample) &
	(next(acnode) = n8 -> next(ac) = cek_kondisi_pendonor) &
	(next(acnode) = n9 -> next(ac) = cek_volume_kantong) &
	(next(acnode) = n10 -> next(ac) = cek_waktu_pengambilan) &
	(next(acnode) = n11 -> next(ac) = waktu_valid) &
	(next(acnode) = n12 -> next(ac) = produk_baik) &
	(next(acnode) = n13 -> next(ac) = hng15) &
	(next(acnode) = n14 -> next(ac) = hanya_WB) &
	(next(acnode) = n15 -> next(ac) = pengecekan_pencatatan_dan_distribusi_darah_karantina) &
	(next(acnode) = n16 -> next(ac) = pengolahan_darah_lanjut) &
	(next(acnode) = n17 -> next(ac) = distribusi_darah) &
	(next(acnode) = n18 -> next(ac) = musnahkan_darah) &
	(next(acnode) = n19_final -> next(ac) = nop) &
	(next(acnode) = n20_final -> next(ac) = nop) &
	(next(acnode) = n21_final -> next(ac) = nop);
	
--cek ac diagram
--LTLSPEC G(( pengolahan = false) -> F(ac = musnahkan_darah))
--LTLSPEC F(ac = cek_data_serologi) xor F(ac = verifikasi_kesehatan)
--LTLSPEC F(ac = verifikasi_kesehatan) xor F(ac = donor_gagal)
--LTLSPEC F(ac = cek_darah) xor F(ac = donor_gagal)
--LTLSPEC F(ac = identifikasi_donor_dan_set_label) xor F(ac = donor_gagal)
--LTLSPEC F(ac = cek_volume_kantong) xor F(ac = musnahkan_darah)	
--LTLSPEC F(ac = cek_waktu_pengambilan) xor F(ac = musnahkan_darah)
--LTLSPEC F(ac = waktu_valid) xor F(ac = musnahkan_darah)
--LTLSPEC F(ac = produk_baik) xor F(ac = non_FFP_produk) xor F(ac = hanya_WB)
--LTLSPEC F(ac = distribusi_darah) xor F(ac = musnahkan_darah)
--LTLSPEC F(ac = distribusi_darah) xor F(ac = hubungi_petugas)
--LTLSPEC G(ac = registrasi_donor -> F(ac = cek_data_serologi) xor F(ac = verifikasi_kesehatan))
--LTLSPEC G(ac = verifikasi_kesehatan -> F(ac = donor_gagal) xor F(ac = cek_darah))	
--LTLSPEC G(ac = cek_data_serologi -> F(ac = verifikasi_kesehatan) xor F(ac = donor_gagal))
--LTLSPEC G(ac = cek_kondisi_pendonor -> F(ac = cek_volume_kantong) xor F(ac = musnahkan_darah))
--LTLSPEC G(ac = cek_volume_kantong -> F(ac = cek_waktu_pengambilan) xor F(ac = musnahkan_darah))
--LTLSPEC G(ac = cek_waktu_pengambilan -> F(ac = waktu_valid) xor F(ac = musnahkan_darah))
--LTLSPEC G(ac = waktu_valid -> F(ac = produk_baik) xor F(ac = non_FFP_produk) xor F(ac = hanya_WB))
--LTLSPEC G(ac = pengolahan_darah_lanjut -> F(ac = distribusi_darah) xor F(ac = musnahkan_darah))


DEFINE
	Phi1 := (ac = registrasi_donor);
	Phi2 := ((ac = verifikasi_kesehatan) & cek_kesehatan = true); 
	Phi3 := ((ac = cek_darah) & darah = true);
	
	phi4 := ((ac= produk_baik) & waktu = krngDr12);
	phi5 := ((ac= non_FFP_produk) & waktu = hng15);
	phi6 := ((ac = hanya_WB) & waktu = lbhDr15);


--Sebelum pengambilan darah maka pendonor telah memenuhi registrasi, verifikasi kesehatan, cek golongan darah, dan  cek HB.	
LTLSPEC G((ac = pengambilan_darah_donor_dan_sample) -> O(Phi1) & O(Phi2) & O(Phi3))

-- identifikasi pendonor dan set label nomor donasi harus diperiksa sebelum pengambilan darah.
LTLSPEC G((ac = pengambilan_darah_donor_dan_sample) -> O(ac = identifikasi_donor_dan_set_label))

-- persyaratan pada waktu pengambilan valid untuk dicatat dan pengolahan
LTLSPEC G((ac = waktu_valid) -> F(!phi4 & phi5 & phi6) | F(phi4 & !phi5 & phi6) | F(phi4 & phi5 & !phi6))

-- Darah yang disumbangkan harus dimusnahkan jika volume invalid atau jika melebihi waktu pengambilan darah maksimal atau terjadinya gejala pada pendonor. 
LTLSPEC G ((ac = cek_volume_kantong & volume = false) | (ac = cek_waktu_pengambilan & waktu = lbhDr20) | (ac = cek_kondisi_pendonor & kondisi = false) -> F(ac = musnahkan_darah))

-- Pada akhir penyumbangan darah, semua kantong, dokumen dan sampel harus diperiksa kembali untuk menjamin bahwa semuanya sudah dilabel.
LTLSPEC G(ac = pengecekan_pencatatan_dan_distribusi_darah_karantina -> O(ac = identifikasi_donor_dan_set_label) & O(ac =pengambilan_darah_donor_dan_sample))

--darah yang di distribusikan harus bebas dari penyakit menular dan uji  konfirmasi golongang darah.
--LTLSPEC G(ac = distribusi_darah -> O ((ac = pengolahan_darah_lanjut) & pengolahan = true) & O ((ac = distribusi_darah) & simpan = true))

-- jika pengolahan darah lanjut gagal maka darah akan dimusnahkan
LTLSPEC G(pengolahan = false -> F(ac = musnahkan_darah))

