MODULE main
VAR
	--nodes and pseudo-nodes of ad
	in_n0_initial : boolean;
	in_n7_final : boolean;
	in_n8_final : boolean;
	in_n1 : boolean;
	in_n2 : boolean;
	in_n3 : boolean;
	in_n4 : boolean;
	in_n5 : boolean;
	in_n6 : boolean;
	--visitable nodes
	acnode : {n0_initial, n1, n2, n3, n4, n5, n6, n7_final, n8_final, nop};
	
	--the visible action of step
	ac : {uji_lab_dan_pengolahan_darah, simpan_darah, simpan_limbah_darah, hubungi_petugas, cek_permintaan_pengiriman_darah, pengemasan_produk_darah, nop};
	
	--input variables
	
	uji_lab : {true, false};
	kondisi_darah : {true, false};
	simpan : {true, false};	
	permintaan : {true, false};	
	
	--control variables
INIT
	--init all nodes
	in_n0_initial = TRUE &
	in_n7_final = FALSE &
	in_n8_final = FALSE &
	in_n1 = FALSE &
	in_n2 = FALSE &
	in_n3 = FALSE &
	in_n4 = FALSE &
	in_n5 = FALSE &
	in_n6 = FALSE &
		
	--init control variables as assign in first nodes
	--set initial visible action node and visible action
	acnode = n0_initial &
	ac = nop;
	
	--shortcut to what happens when an edge is taken
DEFINE
	en0_initialn1_enabled := in_n0_initial;
	en0_initialn1_taken := en0_initialn1_enabled &
		--not in previous nodes anymore
		!next(in_n0_initial) &
		--arrive in target node
		next(in_n1) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n1);
		
DEFINE
	en1n2_enabled := in_n1 & (uji_lab = true);
	en1n2_taken := en1n2_enabled &
		--not in previous nodes anymore
		!next(in_n1) &
		--arrive in target node
		next(in_n2) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n2);

DEFINE
	en1n3_enabled := in_n3 & (uji_lab = false);
	en1n3_taken := en1n3_enabled &
		--not in previous nodes anymore
		!next(in_n1) &
		--arrive in target node
		next(in_n3) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n3);

DEFINE
	en2n4_enabled := in_n2 & (simpan = true);
	en2n4_taken := en2n4_enabled &
		--not in previous nodes anymore
		!next(in_n2) &
		--arrive in target node
		next(in_n4) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n4);

DEFINE
	en2n5_enabled := in_n2 & (simpan = false);
	en2n5_taken := en2n5_enabled &
		--not in previous nodes anymore
		!next(in_n2) &
		--arrive in target node
		next(in_n5) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n5);

		
DEFINE
	en4n6_enabled := in_n4 & (permintaan = true);
	en4n6_taken := en4n6_enabled &
		--not in previous nodes anymore
		!next(in_n4) &
		--arrive in target node
		next(in_n6) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n6);

DEFINE
	en4n2_enabled := in_n4 & (permintaan = true);
	en4n2_taken := en4n2_enabled &
		--not in previous nodes anymore
		!next(in_n4) &
		--arrive in target node
		next(in_n2) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n2);
		
DEFINE
	en5n2_enabled := in_n5 & (kondisi_darah = true);
	en5n2_taken := en5n2_enabled &
		--not in previous nodes anymore
		!next(in_n5) &
		--arrive in target node
		next(in_n2) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n2);

DEFINE
	en5n3_enabled := in_n5 & (kondisi_darah = false);
	en5n3_taken := en5n3_enabled &
		--not in previous nodes anymore
		!next(in_n5) &
		--arrive in target node
		next(in_n3) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n3);
		
DEFINE
	en6n7_final_enabled := in_n6;
	en6n7_final_taken := en6n7_final_enabled &
		--not in previous nodes anymore
		!next(in_n6) &
		--arrive in target node
		next(in_n7_final) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n7_final);
		
DEFINE
	en3n8_final_enabled := in_n3;
	en3n8_final_taken := en3n8_final_enabled &
		--not in previous nodes anymore
		!next(in_n3) &
		--arrive in target node
		next(in_n8_final) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n8_final);
		
TRANS
	( (in_n0_initial = next(in_n0_initial)) | 
	en0_initialn1_taken ) &
	( (in_n1 = next(in_n1)) |
	en0_initialn1_taken |
	en1n2_taken |
	en1n3_taken ) &
	( (in_n2 = next(in_n2)) |
	en4n2_taken |
	en5n2_taken |
	en1n2_taken |
	en2n4_taken |
	en2n5_taken ) &
	( (in_n3 = next(in_n3)) |
	en1n3_taken |
	en5n3_taken |
	en3n8_final_taken ) &
	( (in_n4 = next(in_n4)) |
	en2n4_taken |
	en4n2_taken |
	en4n6_taken ) &
	( (in_n5 = next(in_n5)) |
	en2n5_taken |
	en5n2_taken |
	en5n3_taken) &
	( (in_n6 = next(in_n6)) |
	en4n6_taken |
	en6n7_final_taken ) &
	( (in_n7_final = next(in_n7_final)) |
	en6n7_final_taken ) &
	( (in_n8_final = next(in_n8_final)) |
	en3n8_final_taken );
	
TRANS
	( (next(acnode =nop) <-> in_n7_final) ) &
		(in_n7_final | (
			(en0_initialn1_taken) |
			(en1n2_taken) |
			(en2n4_taken) |
			(en4n2_taken) |
			(en2n5_taken) |
			(en5n2_taken) |
			(en4n6_taken) |
			(en6n7_final_taken) ) );
			
TRANS
	( (next(acnode =nop) <-> in_n8_final) ) &
		(in_n8_final | (
			(en0_initialn1_taken) |
			(en1n2_taken) |
			(en1n3_taken) |
			(en2n4_taken) |
			(en2n5_taken) |
			(en4n2_taken) |
			(en5n2_taken) |
			(en5n3_taken) |
			(en3n8_final_taken) ) );
			
TRANS
	--input variables do not change
	uji_lab = next(uji_lab);
	
TRANS
	--input variables do not change
	kondisi_darah = next(kondisi_darah);
	
TRANS
	(next(acnode) = n0_initial -> next(ac) = nop) &
	(next(acnode) = n1 -> next(ac) = uji_lab_dan_pengolahan_darah) &
	(next(acnode) = n2 -> next(ac) = simpan_darah) &
	(next(acnode) = n3 -> next(ac) = simpan_limbah_darah) &
	(next(acnode) = n4 -> next(ac) = cek_permintaan_pengiriman_darah) &
	(next(acnode) = n5 -> next(ac) = hubungi_petugas) &
	(next(acnode) = n6 -> next(ac) = pengemasan_produk_darah) &
	(next(acnode) = n7_final -> next(ac) = nop) &
	(next(acnode) = n8_final -> next(ac) = nop);
	
--cek ac diagram
--LTLSPEC G(( uji_lab = false) -> F(ac = simpan_limbah_darah))
--LTLSPEC F(ac = cek_data_serologi) xor F(ac = verifikasi_kesehatan)
--LTLSPEC F(ac = verifikasi_kesehatan) xor F(ac = donor_gagal)
--LTLSPEC F(ac = cek_darah) xor F(ac = donor_gagal)
--LTLSPEC F(ac = identifikasi_donor_dan_set_label) xor F(ac = donor_gagal)
--LTLSPEC F(ac = cek_volume_kantong) xor F(ac = simpan_limbah_darah)	
--LTLSPEC F(ac = cek_waktu_pengambilan) xor F(ac = simpan_limbah_darah)
--LTLSPEC F(ac = waktu_valid) xor F(ac = simpan_limbah_darah)
--LTLSPEC F(ac = produk_baik) xor F(ac = non_FFP_produk) xor F(ac = hanya_WB)
--LTLSPEC F(ac = simpan_darah) xor F(ac = simpan_limbah_darah)
--LTLSPEC F(ac = cek_permintaan_pengiriman_darah) xor F(ac = hubungi_petugas)
--LTLSPEC G(ac = registrasi_donor -> F(ac = cek_data_serologi) xor F(ac = verifikasi_kesehatan))
--LTLSPEC G(ac = verifikasi_kesehatan -> F(ac = donor_gagal) xor F(ac = cek_darah))	
--LTLSPEC G(ac = cek_data_serologi -> F(ac = verifikasi_kesehatan) xor F(ac = donor_gagal))
--LTLSPEC G(ac = cek_kondisi_pendonor -> F(ac = cek_volume_kantong) xor F(ac = simpan_limbah_darah))
--LTLSPEC G(ac = cek_volume_kantong -> F(ac = cek_waktu_pengambilan) xor F(ac = simpan_limbah_darah))
--LTLSPEC G(ac = cek_waktu_pengambilan -> F(ac = waktu_valid) xor F(ac = simpan_limbah_darah))
--LTLSPEC G(ac = waktu_valid -> F(ac = produk_baik) xor F(ac = non_FFP_produk) xor F(ac = hanya_WB))
--LTLSPEC G(ac = uji_lab_dan_pengolahan_darah -> F(ac = simpan_darah) xor F(ac = simpan_limbah_darah))
--LTLSPEC G(ac = simpan_darah -> F(ac = cek_permintaan_pengiriman_darah) xor F(ac = hubungi_petugas))
--LTLSPEC G(ac = hubungi_petugas -> F(ac = simpan_darah) xor F(ac = simpan_limbah_darah))

--darah yang di distribusikan harus bebas dari penyakit menular dan uji  konfirmasi golongang darah.
LTLSPEC G(ac = pengemasan_produk_darah -> O ((ac = uji_lab_dan_pengolahan_darah) & uji_lab = true) & O ((ac = simpan_darah) & simpan = true))

-- jika uji lab gagal maka darah akan disimpan di penyimpanan limbah darah
LTLSPEC G(uji_lab = false -> F(ac = simpan_limbah_darah))

--Jika terjadi kegagalan pada penyimpanan, maka petugas akan melakukan tindakan musnahkan darah atau simpan darah kembali
LTLSPEC G((ac = simpan_darah) & simpan = false -> F(ac = hubungi_petugas))
LTLSPEC G((ac=hubungi_petugas) & kondisi_darah = true -> F(ac = simpan_darah))
LTLSPEC G((ac=hubungi_petugas) & kondisi_darah = false -> F(ac = simpan_limbah_darah))
LTLSPEC F(ac = pengemasan_produk_darah) xor F(ac = simpan_limbah_darah)