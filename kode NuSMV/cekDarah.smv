MODULE main
VAR
	--nodes and pseudo-nodes of ad
	in_n0_initial : boolean;
	in_n10_final : boolean;
	in_n11_final : boolean;
	in_n1 : boolean;
	in_n2 : boolean;
	in_n3 : boolean;
	in_n4 : boolean;
	in_n5 : boolean;
	in_n6 : boolean;
	in_n7 : boolean;
	in_n8 : boolean;
	in_n9 : boolean;
	in_Fn5 : boolean;
	in_Fn6 : boolean;
	in_Jn5 : boolean;
	in_Jn6 : boolean;
	
	--visitable nodes
	acnode : {n0_initial, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10_final, n11_final, nop};
	
	--the visible action of step
	ac : {cek_ABO_rhesus, cek_hb, cek_golongan_darah, cek_rhesus, hb_valid, hb_invalid, pelulusan_cek_darah, cek_darah_valid, cek_darah_invalid, nop};

	--input variables
	hb : {true, false};
	lulus : {true, false};
	
	--control variables
INIT
	--init all nodes
	in_n0_initial = TRUE &
	in_n10_final = FALSE &
	in_n11_final = FALSE &
	in_n1 = FALSE &
	in_n2 = FALSE &
	in_n3 = FALSE &
	in_n4 = FALSE &
	in_n5 = FALSE &
	in_n6 = FALSE &
	in_n7 = FALSE &
	in_n8 = FALSE &
	in_n9 = FALSE &
	in_Fn5 = FALSE &
	in_Fn6 = FALSE &
	in_Jn5 = FALSE &
	in_Jn6 = FALSE &
	
	--init control variables as assign in first nodes
	--set initial visible action node and visible action
	acnode = n0_initial &
	ac = nop;
	
	--shortcut to what happens when an edge is taken
DEFINE
	en0_initialn1_enabled := in_n0_initial;
	en0_initialn1_taken := en0_initialn1_enabled &
		--not in previous nodes anymore
		!next(in_n0_initial) &
		--arrive in target node
		next(in_n1) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n1);

DEFINE
	en1n2_enabled := in_n1 & (hb = true);
	en1n2_taken := en1n2_enabled &
		--not in previous nodes anymore
		!next(in_n1) &
		--arrive in target node
		next(in_n2) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n2);

DEFINE
	en1n3_enabled := in_n1 & (hb = false);
	en1n3_taken := en1n3_enabled &
		--not in previous nodes anymore
		!next(in_n1) &
		--arrive in target node
		next(in_n3) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n3);

DEFINE
	en2n4_enabled := in_n2;
	en2n4_taken := en2n4_enabled &
		--not in previous nodes anymore
		!next(in_n2) &
		--arrive in target node
		next(in_n4) &
		--possibly taking hidden edges
		next(in_Fn5) &
		next(in_Fn6) &
		--doing assignments
		--set next node
		next(acnode = n4);
		
DEFINE
	en3n4_enabled := in_n3;
	en3n4_taken := en3n4_enabled &
		--not in previous nodes anymore
		!next(in_n3) &
		--arrive in target node
		next(in_n4) &
		--possibly taking hidden edges
		next(in_Fn5) &
		next(in_Fn6) &
		--doing assignments
		--set next node
		next(acnode = n4);
		
DEFINE
	eFn5n5_enabled := in_Fn5;
	eFn5n5_taken := eFn5n5_enabled &
		--not in previous nodes anymore
		!next(in_Fn5) &
		!next(in_n4) &
		--arrive in target node
		next(in_n5) &
		--posibbly taking hidden edges
		next(in_Jn5) &
		--doing assignments
		--set next node
		next(acnode = n5);
		
DEFINE
	eFn6n6_enabled := in_Fn6;
	eFn6n6_taken := eFn6n6_enabled &
		--not in previous nodes anymore
		!next(in_Fn6) &
		!next(in_n4) &
		--arrive in target node
		next(in_n6) &
		--posibbly taking hidden edges
		next(in_Jn6) &
		--doing assignments
		--set next node
		next(acnode = n6);
		
DEFINE
	eJn5Jn6n7_enabled := in_Jn5 & in_Jn6;
	eJn5Jn6n7_taken := eJn5Jn6n7_enabled &
		--not in previous nodes anymore
		!next(in_Jn5) &
		!next(in_n5) &
		!next(in_Jn6) &
		!next(in_n6) &
		--arrive in target node
		next(in_n7) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n7);
		
DEFINE
	en7n8_enabled := in_n7 & (lulus = true);
	en7n8_taken := en7n8_enabled &
		--not in previous nodes anymore
		!next(in_n7) &
		--arrive in target node
		next(in_n8) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n8);

DEFINE
	en7n9_enabled := in_n7 & (lulus = false);
	en7n9_taken := en7n9_enabled &
		--not in previous nodes anymore
		!next(in_n7) &
		--arrive in target node
		next(in_n9) &
		--posibbly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n9);
		
DEFINE
	en8n10_final_enabled := in_n8;
	en8n10_final_taken := en8n10_final_enabled &
		--not in previous nodes anymore
		!next(in_n8) &
		--arrive in target node
		next(in_n10_final) &
		--possibly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n10_final);
		
DEFINE
	en9n11_final_enabled := in_n9;
	en9n11_final_taken := en9n11_final_enabled &
		--not in previous nodes anymore
		!next(in_n9) &
		--arrive in target node
		next(in_n11_final) &
		--possibly taking hidden edges
		--doing assignments
		--set next node
		next(acnode = n11_final);

		
TRANS
	( (in_n0_initial = next(in_n0_initial) ) |
	en0_initialn1_taken ) &
	( (in_n1 = next(in_n1) ) |
	en0_initialn1_taken |
	en1n2_taken |
	en1n3_taken ) &
	( (in_n2 = next(in_n2) ) |
	en1n2_taken |
	en2n4_taken ) &
	( (in_n3 = next(in_n3) ) |
	en1n3_taken |
	en3n4_taken ) &
	( (in_n4 = next(in_n4) ) |
	en2n4_taken |
	en3n4_taken |
	eFn5n5_taken |
	eFn6n6_taken ) &
	( (in_n5 = next(in_n5) ) |
	eFn5n5_taken |
	eJn5Jn6n7_taken) &
	( (in_n6 = next(in_n6) ) |
	eFn6n6_taken |
	eJn5Jn6n7_taken) &
	( (in_n7 = next(in_n7) ) |
	eJn5Jn6n7_taken |
	en7n8_taken |
	en7n9_taken ) &
	( (in_n8 = next(in_n8) ) |
	en7n8_taken |
	en8n10_final_taken) &
	( (in_n9 = next(in_n9) ) |
	en7n9_taken |
	en9n11_final_taken ) &
	( (in_n10_final = next(in_n10_final) ) |
	en8n10_final_taken) &
	( (in_n11_final = next(in_n11_final) ) |
	en9n11_final_taken) &
	( (in_Fn5 = next(in_Fn5) ) |
	en3n4_taken |
	en2n4_taken |
	eFn5n5_taken ) &
	( (in_Fn6 = next(in_Fn6) ) |
	en3n4_taken |
	en2n4_taken |
	eFn6n6_taken ) &
	( (in_Jn5 = next(in_Jn5) ) |
	eFn5n5_taken |
	eJn5Jn6n7_taken ) &
	( (in_Jn6 = next(in_Jn6) ) |
	eFn6n6_taken |
	eJn5Jn6n7_taken );
	
TRANS
	( (next(acnode = nop) <-> in_n10_final) ) &
		(in_n10_final | (
			(en0_initialn1_taken) |
			(en1n2_taken) |
			(en1n3_taken) |
			(en2n4_taken) |
			(en3n4_taken) |
			(eFn5n5_taken) |
			(eFn5n5_taken) |
			(eJn5Jn6n7_taken) |
			(en7n8_taken) |
			(en8n10_final_taken) ) );
			
TRANS
	( (next(acnode = nop) <-> in_n11_final) ) &
		(in_n11_final | (
			(en0_initialn1_taken) |
			(en1n2_taken) |
			(en1n3_taken) |
			(en2n4_taken) |
			(en3n4_taken) |
			(eFn5n5_taken) |
			(eFn5n5_taken) |
			(eJn5Jn6n7_taken) |
			(en7n9_taken) |
			(en9n11_final_taken) ) );
			
TRANS
	(next(acnode) = n0_initial -> next(ac) = nop) &
	(next(acnode) = n1 -> next(ac) = cek_hb) &
	(next(acnode) = n2 -> next(ac) = hb_valid) &
	(next(acnode) = n3 -> next(ac) = hb_invalid) &
	(next(acnode) = n4 -> next(ac) = cek_ABO_rhesus) &
	(next(acnode) = n5 -> next(ac) = cek_golongan_darah) &
	(next(acnode) = n6 -> next(ac) = cek_rhesus) &
	(next(acnode) = n7 -> next(ac) = pelulusan_cek_darah) &
	(next(acnode) = n8 -> next(ac) = cek_darah_valid) &
	(next(acnode) = n9 -> next(ac) = cek_darah_invalid) &
	(next(acnode) = n10_final -> next(ac) = nop) &
	(next(acnode) = n11_final -> next(ac) = nop);
	

--LTLSPEC F(ac = hb_valid) xor F(ac = hb_invalid)

--LTLSPEC F(ac = cek_darah_valid) xor F(ac = cek_darah_invalid)

--LTLSPEC G(ac = cek_ABO_rhesus -> F(ac = cek_rhesus) & F(ac = cek_golongan_darah))
	
--LTLSPEC G(ac = cek_hb -> F(ac = hb_valid) xor F(ac = hb_invalid))

--LTLSPEC G(ac = cek_ABO_rhesus -> F(ac = pelulusan_cek_darah))
	
--LTLSPEC G(ac = pelulusan_cek_darah -> F(ac = cek_darah_valid) xor F(ac = cek_darah_invalid))
	
--LTLSPEC G((ac=cek_darah_valid)->O (Rho1) O(ac = cek_hb) & O(ac = cek_golongan_darah) & O(ac = cek_rhesus))

DEFINE
	psi := ((ac = pelulusan_cek_darah) & lulus = true);
	
LTLSPEC
	G((ac=cek_darah_valid)->O(psi) & O(ac = cek_hb) & O(ac = cek_golongan_darah) & O(ac = cek_rhesus))